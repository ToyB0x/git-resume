# ドキュメント管理システム

このファイルは、Cline/RooCodeがドキュメントを理解・評価する際のエントリポイントです。重要なドキュメントの概要とリンク一覧を提供し、AIがプロジェクトのドキュメント構造を効率的に把握できるようにします。

## 重要ルール

- **コンテキスト最適化**:
  - 初期段階では必要最小限の情報のみを読み込み、詳細は必要に応じて遅延読み込みする
  - ユーザーが特定の機能やドキュメントについて質問した場合のみ、関連ドキュメントを読み込む
  - 大量のコードやドキュメントを一度に読み込まず、必要な部分のみを参照する
  - 読み込んだ情報の要点を把握し、不要な詳細は省略する

- **更新と検証**:
  - プロジェクト構造や重要ドキュメントの変更を検出した場合、関連する設定ファイルを即時更新する
  - ドキュメント間のリンクが有効かを確認し、無効なリンクを発見した場合は修正を提案する
  - 設定ファイル間で矛盾する情報を発見した場合、一貫性のある情報に更新する
  - 古い情報や廃止された参照を発見した場合、最新の情報に基づいて更新を提案する

- **Repomix活用**:
  - **最優先で検討**: 大規模コードベースの分析が必要な場合は、常にRepomixの使用を最初に検討する
  - **新規プロジェクト理解**: 初めて触れるコードベースでは、手動分析の前にRepomixを実行し、主要コンポーネント、依存関係、アーキテクチャを短時間で把握する（例：`pack_codebase`ツールで全体構造を分析後、重要な部分を特定）
  - **特定機能調査**: 機能やモジュールの調査では、関連コードを手動で探す前にRepomixで効率的に特定する（例：特定の機能に関連するファイルを`includePatterns`で絞り込み分析）
  - **バグ修正・機能追加**: コード変更前に必ずRepomixで依存関係を分析し、影響範囲を予測する（例：変更予定のコンポーネントを分析し、依存するすべてのモジュールを特定）
  - **継続的活用**: プロジェクトの進行に合わせて定期的にRepomixを実行し、コードベースの変化を追跡する
  - **最適な設定**: 目的に応じて圧縮レベルを調整（全体把握には高圧縮、詳細分析には低圧縮）し、includePatterns/ignorePatterns引数で分析対象を最適化する

## プロジェクト概要

このプロジェクトは、ドキュメント管理システムを構築し、一貫性のあるドキュメント作成・管理を実現するためのものです。ドキュメントガイドライン、ルール、検証システムの3層構造で構成されています。

## 重要ドキュメント

ドキュメントの詳細な一覧と構造については、[ドキュメントガイドライン](docs/README.md)を参照してください。このドキュメントには、プロジェクトの全体像、重要なドキュメントへのリンク、ドキュメント構造の説明が含まれています。

特に以下のセクションを参照すると効率的です：
- [クイックアクセスガイド](docs/README.md#クイックアクセスガイド) - 対象読者別エントリーポイントと主要カテゴリ
- [重要ドキュメント一覧](docs/README.md#重要ドキュメント一覧) - 基本ガイドライン、ドキュメントルール、メタデータと関連性、AIツール連携など
## ドキュメント構造

プロジェクトの詳細なディレクトリ構造については、[ドキュメント配置構造](docs/rules/structure.md)を参照してください。

このプロジェクトでは、ドキュメントを以下の主要なディレクトリに整理しています：

- `/docs/`: すべてのドキュメントのルートディレクトリ
  - `/docs/guide/`: 対象者別のガイド（開発者、運用者、ユーザー向け）
  - `/docs/rules/`: ドキュメント作成・管理のルール
  - `/docs/templates/`: 各種ドキュメントのテンプレート
  - `/docs/product/`: プロダクト情報（ビジョン、機能、ロードマップなど）
- `/apps/`: アプリケーションコード
- `/packages/`: 共有パッケージ（モノレポ構造）
- `/infra/`: インフラストラクチャ関連ファイル
```

## AIツール利用ガイドライン

### 設定ファイル検証と活用

- **基本情報の完全性**: プロジェクト目的・概要の明確な記述、構造概要、重要リンクの分類
- **リンクの有効性**: 参照リンクの確認、相対パスの正確性、リンクの網羅性
- **指示の明確性**: AIへの具体的指示、プロジェクト固有ルールの明示
- **最新性**: 最終更新日の記録、現状との一致、古い情報の排除
- **ツールセットアップ**: RepomixとPuppetierのMCP経由利用確認
- **コンテキスト最適化**: 遅延読み込みの実践、誤りや古い情報発見時の更新提案
- **ドキュメント活用**: 重要ドキュメント参照、構造理解、メタデータ活用、検証支援、改善提案

### Repomixの活用

Repomixは以下のシナリオで活用してください：

1. **新規プロジェクト理解**: コードベースの全体構造把握
2. **特定機能の調査**: 機能やモジュールの詳細分析
3. **バグ修正・機能追加**: 修正や追加の影響範囲特定

詳細は[Repomixの活用](docs/rules/ai/tools/repomix.md)を参照。

## 更新履歴

- 2025/3/24: 重要ドキュメント一覧を`docs/README.md`に統合し、重複を解消
- 2025/3/23: Repomixの活用ガイドライン追加、AIによる大規模コードベース分析支援
- 2025/3/23: .clinerules ファイルをマークダウン形式に変更、AIの知識のエントリポイントとして機能するよう更新
- 2025/3/23: AIツール統合のためのルール整備の一環として .clinerules ファイル実装