# ドキュメント管理システム

このファイルは、Cline/RooCodeがドキュメントを理解・評価する際のエントリポイントです。重要なドキュメントの概要とリンク一覧を提供し、AIがプロジェクトのドキュメント構造を効率的に把握できるようにします。

## 重要ルール

- **コンテキスト最適化**:
  - 初期段階では必要最小限の情報のみを読み込み、詳細は必要に応じて遅延読み込みする
  - ユーザーが特定の機能やドキュメントについて質問した場合のみ、関連ドキュメントを読み込む
  - 大量のコードやドキュメントを一度に読み込まず、必要な部分のみを参照する
  - 読み込んだ情報の要点を把握し、不要な詳細は省略する

- **更新と検証**:
  - プロジェクト構造や重要ドキュメントの変更を検出した場合、関連する設定ファイルを即時更新する
  - ドキュメント間のリンクが有効かを確認し、無効なリンクを発見した場合は修正を提案する
  - 設定ファイル間で矛盾する情報を発見した場合、一貫性のある情報に更新する
  - 古い情報や廃止された参照を発見した場合、最新の情報に基づいて更新を提案する

- **Repomix活用**:
  - 新規プロジェクト理解：初めて触れるコードベースの全体構造を把握するためにRepomixを使用し、主要コンポーネント、依存関係、アーキテクチャを分析する
  - 特定機能調査：特定の機能やモジュールを詳細に分析する際に、関連するコードパターンや実装方法を効率的に特定する
  - バグ修正・機能追加：修正や追加の影響範囲を特定するために、コードの依存関係や参照関係を分析し、変更の波及効果を予測する
  - 適切な圧縮レベルを選択し、必要に応じてincludePatterns/ignorePatterns引数を使用して分析対象を絞り込む

## プロジェクト概要

このプロジェクトは、ドキュメント管理システムを構築し、一貫性のあるドキュメント作成・管理を実現するためのものです。ドキュメントガイドライン、ルール、検証システムの3層構造で構成されています。

## 重要ドキュメント一覧

### 基本ガイドライン

- [ドキュメントガイドライン](docs/README.md) - 基本方針
- [ドキュメントルールの適用計画](docs/PLAN.md) - 段階的実装計画
- [ドキュメントルールの適用状況](docs/PROGRESS.md) - 進捗状況

### ドキュメントルール

- [ドキュメントルール概要](docs/rules/README.md) - 概要と目的
- [ドキュメント種別](docs/rules/types.md) - 種別と特徴
- [ドキュメント構造](docs/rules/structure.md) - 配置構造
- [ドキュメントリンク方法](docs/rules/links.md) - リンク方法
- [ドキュメント検証システム](docs/rules/validation.md) - 検証方法

### メタデータと関連性

- [メタデータ標準](docs/rules/documents/metadata.md) - メタデータ標準
- [ドキュメント間の関連性](docs/rules/documents/relations.md) - 関連付け方法
- [ナビゲーション構造](docs/rules/documents/navigation.md) - ナビゲーション構造
- [コードとドキュメントの同期](docs/rules/documents/code-doc-sync.md) - 同期方法

### AIツール連携

- [AIツール連携概要](docs/rules/ai/README.md) - 連携概要
- [コミットメッセージ規約](docs/rules/ai/commit.md) - コミットメッセージ規約
- [コラボレーション方法](docs/rules/ai/collaboration.md) - コラボレーション方法
- [Repomixの活用](docs/rules/ai/tools/repomix.md) - 効果的な活用方法

### 検証システム

- [自己チェックシステム](docs/rules/self-check/README.md) - 自己チェックシステム
- [機能仕様書（正しい例）](docs/rules/self-check/test/feature-spec/correct.md) - 正しい例
- [機能仕様書（誤った例）](docs/rules/self-check/test/feature-spec/wrong.md) - 誤った例
- [API仕様書（正しい例）](docs/rules/self-check/test/api-doc/correct.md) - 正しい例
- [API仕様書（誤った例）](docs/rules/self-check/test/api-doc/wrong.md) - 誤った例

### テンプレート

- [テンプレート概要](docs/templates/README.md) - 概要と使用方法
- [プロダクト要求仕様書](docs/templates/documents/prd-template.md) - PRD
- [テスト計画書](docs/templates/documents/test-plan-template.md) - テスト計画
- [リリースノート](docs/templates/documents/release-note-template.md) - リリースノート
- [議事録](docs/templates/documents/meeting-minutes-template.md) - 議事録
- [振り返り](docs/templates/documents/retrospective-template.md) - 振り返り
- [TDD](docs/templates/documents/tdd-template.md) - TDD

### ユーザーガイド

- [開発者ガイド](docs/guide/developer/README.md) - 開発者向け
- [運用者ガイド](docs/guide/operator/README.md) - 運用者向け
- [ユーザーガイド](docs/guide/users/README.md) - エンドユーザー向け

### プロダクト情報

- [プロダクト概要](docs/product/README.md) - 概要
- [ビジョン](docs/product/vision.md) - ビジョン
- [プロダクトゴール](docs/product/product-goal.md) - ゴール
- [価値提案](docs/product/value-proposition.md) - 価値提案
- [メンバー](docs/product/members.md) - チームメンバー
- [機能一覧](docs/product/features/README.md) - 機能一覧

## ドキュメント構造

```
docs/
├── README.md                 # ドキュメントガイドライン
├── PLAN.md                   # 適用計画
├── PROGRESS.md               # 適用状況
├── guide/                    # ユーザーガイド
│   ├── developer/            # 開発者向け
│   ├── operator/             # 運用者向け
│   └── users/                # エンドユーザー向け
├── product/                  # プロダクト情報
│   ├── features/             # 機能一覧
│   ├── members.md            # メンバー
│   ├── product-goal.md       # ゴール
│   ├── README.md             # 概要
│   ├── value-proposition.md  # 価値提案
│   └── vision.md             # ビジョン
├── rules/                    # ドキュメントルール
│   ├── ai/                   # AIツール連携
│   ├── documents/            # ドキュメント関連
│   ├── self-check/           # 自己チェック
│   ├── links.md              # リンク方法
│   ├── README.md             # 概要
│   ├── structure.md          # 構造
│   ├── types.md              # 種別
│   └── validation.md         # 検証システム
└── templates/                # テンプレート
    ├── documents/            # ドキュメント
    └── README.md             # 概要
```

## AIツール利用ガイドライン

### 設定ファイル検証と活用

- **基本情報の完全性**: プロジェクト目的・概要の明確な記述、構造概要、重要リンクの分類
- **リンクの有効性**: 参照リンクの確認、相対パスの正確性、リンクの網羅性
- **指示の明確性**: AIへの具体的指示、プロジェクト固有ルールの明示
- **最新性**: 最終更新日の記録、現状との一致、古い情報の排除
- **ツールセットアップ**: RepomixとPuppetierのMCP経由利用確認
- **コンテキスト最適化**: 遅延読み込みの実践、誤りや古い情報発見時の更新提案
- **ドキュメント活用**: 重要ドキュメント参照、構造理解、メタデータ活用、検証支援、改善提案

### Repomixの活用

Repomixは以下のシナリオで活用してください：

1. **新規プロジェクト理解**: コードベースの全体構造把握
2. **特定機能の調査**: 機能やモジュールの詳細分析
3. **バグ修正・機能追加**: 修正や追加の影響範囲特定

詳細は[Repomixの活用](docs/rules/ai/tools/repomix.md)を参照。

## 更新履歴

- 2025/3/23: Repomixの活用ガイドライン追加、AIによる大規模コードベース分析支援
- 2025/3/23: .clinerules ファイルをマークダウン形式に変更、AIの知識のエントリポイントとして機能するよう更新
- 2025/3/23: AIツール統合のためのルール整備の一環として .clinerules ファイル実装