# ドキュメント管理システム

このファイルは、Cline/RooCodeがドキュメントを理解・評価する際のエントリポイントです。重要なドキュメントの概要とリンク一覧を提供し、AIがプロジェクトのドキュメント構造を効率的に把握できるようにします。

## 重要ルール

- **コンテキスト最適化**:
  - 初期段階では必要最小限の情報のみを読み込み、詳細は必要に応じて遅延読み込みする
  - ユーザーが特定の機能やドキュメントについて質問した場合のみ、関連ドキュメントを読み込む
  - 大量のコードやドキュメントを一度に読み込まず、必要な部分のみを参照する
  - 読み込んだ情報の要点を把握し、不要な詳細は省略する

- **更新と検証**:
  - プロジェクト構造や重要ドキュメントの変更を検出した場合、関連する設定ファイルを即時更新する
  - ドキュメント間のリンクが有効かを確認し、無効なリンクを発見した場合は修正を提案する
  - 設定ファイル間で矛盾する情報を発見した場合、一貫性のある情報に更新する
  - 古い情報や廃止された参照を発見した場合、最新の情報に基づいて更新を提案する

- **Repomix活用**:
  - **最優先で検討**: 大規模コードベースの分析が必要な場合は、常にRepomixの使用を最初に検討する
  - **新規プロジェクト理解**: 初めて触れるコードベースでは、手動分析の前にRepomixを実行し、主要コンポーネント、依存関係、アーキテクチャを短時間で把握する（例：`pack_codebase`ツールで全体構造を分析後、重要な部分を特定）
  - **特定機能調査**: 機能やモジュールの調査では、関連コードを手動で探す前にRepomixで効率的に特定する（例：特定の機能に関連するファイルを`includePatterns`で絞り込み分析）
  - **バグ修正・機能追加**: コード変更前に必ずRepomixで依存関係を分析し、影響範囲を予測する（例：変更予定のコンポーネントを分析し、依存するすべてのモジュールを特定）
  - **継続的活用**: プロジェクトの進行に合わせて定期的にRepomixを実行し、コードベースの変化を追跡する
  - **最適な設定**: 目的に応じて圧縮レベルを調整（全体把握には高圧縮、詳細分析には低圧縮）し、includePatterns/ignorePatterns引数で分析対象を最適化する

## プロジェクト概要

このプロジェクトは、ドキュメント管理システムを構築し、一貫性のあるドキュメント作成・管理を実現するためのものです。ドキュメントガイドライン、ルール、検証システムの3層構造で構成されています。
このプロジェクトは、ドキュメント管理システムを構築し、一貫性のあるドキュメント作成・管理を実現するためのものです。ドキュメントガイドライン、ルール、検証システムの3層構造で構成されています。

## 重要ドキュメント

ドキュメントの詳細な一覧と構造については、[ドキュメントガイドライン](docs/README.md)を参照してください。このドキュメントには、プロジェクトの全体像、重要なドキュメントへのリンク、ドキュメント構造の説明が含まれています。

特に以下のセクションを参照すると効率的です：
- [クイックアクセスガイド](docs/README.md#クイックアクセスガイド) - 対象読者別エントリーポイントと主要カテゴリ
- [重要ドキュメント一覧](docs/README.md#重要ドキュメント一覧) - 基本ガイドライン、ドキュメントルール、メタデータと関連性、AIツール連携など

