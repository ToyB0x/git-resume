name: 'Git Resume'
author: 'ToyB0x'
description: 'Auto generate / maintain resume from git activity with LLM'
branding:
  color: 'blue'
  icon: 'activity'
inputs:
  RESUME_USERNAME:
    description: "GitHub username to generate resume"
    required: true
  RESUME_COMMAND:
    description: "command to run (e.g. generate, update, etc.)"
    required: true
  RESUME_GEMINI_API_KEY:
    description: "API Key for Gemini LLM"
    required: true
  RESUME_ENV:
    description: "git-resume environment (normally prd)"
    required: false
    default: "prd"
  GITHUB_TOKEN:
    description: "Required if you want to use GitHub API to generate resume"
    required: true
runs:
  using: "composite"
  steps:
    - name: Check out
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: 'ToyB0x/git-resume'
        path: 'git-resume'

    # Note: Uncomment the following step if you want to throw an error if the repository is not private
    #    - name: Throw error if repository is not private
    #      run: |
    #        if [ "github.event.repository.private" != "true" ]; then
    #          echo "This action only works with private repositories"
    #          exit 1
    #        fi

    - name: Enable corepack for pnpm
      run: npm install -g corepack@latest && corepack enable pnpm
      shell: bash

    - name: Setup & Restore Node cache
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
      with:
        cache: 'pnpm'
        node-version-file: 'git-resume/package.json'
        cache-dependency-path: 'git-resume/pnpm-lock.yaml'

    - name: Install all packages
      run: pnpm install --frozen-lockfile
      shell: bash
      working-directory: git-resume

    - name: Build all packages
      run: pnpm turbo build
      shell: bash
      working-directory: git-resume

    - name: Show Help
      run: pnpm jobs ${{ inputs.RESUME_COMMAND }}
      shell: bash
      working-directory: git-resume/apps/cli-github
      env:
        RESUME_USERNAME: ${{ inputs.RESUME_USERNAME }}
        RESUME_GEMINI_API_KEY: ${{ inputs.RESUME_GEMINI_API_KEY }}
        RESUME_ENV: ${{ inputs.RESUME_ENV }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
